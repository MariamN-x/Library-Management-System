import java.io.Serializable;
import java.util.List;
import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.FlowPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class FirstPage extends Application implements Serializable{
    protected static List<User> users;
    protected Stage primaryStage;
    protected TextField usernameField;
    protected PasswordField passwordField;
    protected PasswordField retypePasswordField;
    protected Button login;
    protected Button signup1;
    protected Button signup2;
   
    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Library System");
        LoginScene(primaryStage);
        primaryStage.show();

    }
    
    protected boolean Login(String username, String password,Stage primaryStage) {
       User loggedInUser = User.login(users, username, password);
    if (loggedInUser != null) {
        System.out.println("Login successful!");

        if (loggedInUser instanceof Admin) {
            primaryStage.setScene(AdminScene());
            return true;
        } else if (loggedInUser instanceof Librarian) {
            primaryStage.setScene(LibrarianScene());
            return true;
        } else if (loggedInUser instanceof Borrower) {
            primaryStage.setScene(BorrowerScene());
            return true;
        }
    } else {
        return false;
    }
        return false;
    }

   
    protected  boolean signup(String username, String password,Stage primaryStage) {
    if (isUsernameExists(username)) {
        return false; 
    }
    if (isAdminSignupAllowed(username)) {
        User admin=new Admin(username,password);
        users.add(admin);
        
    } else if (isLibrarianSignupAllowed(username)) {
        User lib=new Librarian(username,password);
        users.add(lib);
    } else {
        User bor=new Borrower(username,password);
        users.add(bor);
    }
    return true;
}
    
protected boolean isUsernameExists(String username) {
    for (User user : users) {
        if (user.getUserName().equals(username)) {
            return true; 
        }
    }
    return false; 
}
protected boolean isAdminSignupAllowed(String username) {
    return username.startsWith("admin_allowed_");
}

protected boolean isLibrarianSignupAllowed(String username) {
    return username.startsWith("librarian_allowed_");
}

//scenes

protected void LoginScene(Stage primaryStage) {
        Image image = new Image("file:ELib.png");
        ImageView imageView = new ImageView(image);

        Label usernameLbl1 = new Label("Username  ");
        usernameField = new TextField();
        // remove borders except bottom
        usernameField.setStyle("-fx-background-color: transparent; -fx-background-radius: 0; -fx-border-width: 0 0 1 0; -fx-border-color: black;");

        Label passwordLbl = new Label("Password  ");
        passwordField = new PasswordField();
        passwordField.setStyle("-fx-background-color: transparent; -fx-background-radius: 0; -fx-border-width: 0 0 1 0; -fx-border-color: black;");

        login = new Button("Login");
        signup1 = new Button("Sign Up");
        login.setStyle("-fx-font-size: 15px; -fx-background-color: #062758; -fx-text-fill: white;");
        signup1.setStyle("-fx-font-size: 15px; -fx-background-color: #062758; -fx-text-fill: white;");

        FlowPane root1 = new FlowPane(usernameLbl1, usernameField);
        root1.setAlignment(Pos.CENTER);
        root1.setHgap(10);
        root1.setVgap(5);
        root1.setPadding(new Insets(0, 0, 0, 200));

        FlowPane root2 = new FlowPane(passwordLbl, passwordField);
        root2.setAlignment(Pos.CENTER);
        root2.setHgap(10);
        root2.setVgap(5);
        root2.setPadding(new Insets(0, 0, 0, 200));

        FlowPane root3 = new FlowPane(login, signup1);
        root3.setAlignment(Pos.CENTER);
        root3.setHgap(20);
        root3.setPadding(new Insets(20, 0, 0, 250));

        VBox Root = new VBox();
        Root.setAlignment(Pos.CENTER);
        Root.setSpacing(10);
        Root.getChildren().addAll(root1, root2, root3);

        Label lbl3 = new Label("Library\n\t\tManagment\n\t\t\t\t\tSystem");
        lbl3.setStyle("-fx-font-size: 21px; -fx-font-weight: bold; -fx-font-family: 'Georgia';-fx-font-style: italic; -fx-text-fill: white;");
        HBox lastRoot = new HBox(lbl3);
        lastRoot.setAlignment(Pos.CENTER_LEFT);
        lastRoot.setPadding(new Insets(0, 0, 0, 20));

        StackPane all = new StackPane(imageView, Root, lastRoot);
        Scene scene = new Scene(all, 700, 600);

        ButtonHandler buttonHandler = new ButtonHandler(users, primaryStage, usernameField, passwordField, login, signup1);
        login.setOnAction(buttonHandler);
        signup1.setOnAction(buttonHandler);

        primaryStage.setScene(scene);
    }
protected Scene AdminScene() {
    Label lbl=new Label("Welcome To The Library...\nAdmin");
    lbl.setStyle("-fx-font-size: 21px; -fx-font-weight: bold; -fx-font-family: 'Georgia';-fx-font-style: italic; -fx-text-fill: black;");
    VBox root=new VBox(lbl);   
    root.setAlignment(Pos.CENTER);
    Scene newScene=new Scene(root,700,600);
    
    return newScene;
}

protected Scene LibrarianScene() {
     Label lbl=new Label("Welcome To The Library...\nLibrarian");
    lbl.setStyle("-fx-font-size: 21px; -fx-font-weight: bold; -fx-font-family: 'Georgia';-fx-font-style: italic; -fx-text-fill: black;");
    VBox root=new VBox(lbl);   
    root.setAlignment(Pos.CENTER);
    Scene newScene=new Scene(root,700,600);
    
    return newScene;
}

protected Scene BorrowerScene() {
    Label lbl=new Label("Welcome To The Library...\nBorrower");
    lbl.setStyle("-fx-font-size: 21px; -fx-font-weight: bold; -fx-font-family: 'Georgia';-fx-font-style: italic; -fx-text-fill: black;");
    VBox root=new VBox(lbl);   
    root.setAlignment(Pos.CENTER);
    Scene newScene=new Scene(root,700,600);
    
    return newScene;
}


public static void main(String[] args) {
        users=User.readUsersFromFile("users.bin");
        launch(args);
        Admin.writeUsersToFile(users,"users.bin");       
    }
}
