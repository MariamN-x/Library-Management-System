package testuser;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */

public class Borrower extends User{
    
    public static ArrayList<Borrower> borrowers = new ArrayList<>();

    public String getUserName() {
       return super.getUserName();
    }

    public void setUserName(String UserName) {
       super.setUserName(UserName); 
    }

    public String getPassword() {
        return super.getPassword();
    }

    public void setPassword(String Password) {
         super.setPassword (Password);
    }
    @Override
     public ArrayList<User>readFromFile(String fileName) {
         ArrayList<User> borrowers = new ArrayList<>();
        try {
            File file = new File(fileName);
            Scanner scanner = new Scanner(file);

            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                String[] parts = line.split(" ");
                if (parts.length == 2) {
                    User borrower = new Librarian();
                    borrower.setUserName(parts[0]);
                    borrower.setPassword(parts[1]);
                    borrowers.add(borrower);
                } else {
                    System.out.println("Invalid format in the file: " + line);
                }
            }

            scanner.close();
        } catch (FileNotFoundException e) {
            System.out.println("File not found: " + fileName);
            System.out.println(e);
        }

        return borrowers;
    }
    @Override
    public void writeToFile(ArrayList<User>users,String fileName)
    {
         try (FileWriter writer = new FileWriter(fileName)) {
            for (User bor : users) {
                writer.write(bor.getUserName() + " " + bor.getPassword() + System.lineSeparator());
            }
        } catch (IOException e) {
            System.out.println(e);
        }
    }
    @Override
     public void Login(){
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();

        boolean isFound = false;
        for (Borrower borrower : borrowers) {
        if (borrower.getUserName().equals(username)&& borrower.getPassword().equals (password)) {
            System.out.println("Login successful!");
            return;
        }       
    }
               System.out.println("Invalid username or password!");
               System.exit(1);
        }
     @Override
     public void SignUp()
     {
           System.out.println("Enter borrower's username: ");
        Scanner scanner = new Scanner(System.in);
        String username = scanner.nextLine();
        Borrower borrower = new Borrower();
        borrower.setUserName(username);

        System.out.println("Enter borrower's password: ");
        String password = scanner.nextLine();
        borrower.setPassword(password);
        borrowers.add(borrower);
        System.out.println("Borrower ' " + username + " 'added successfully!");
     }

     @Override
     public void editUser()
     {}

}
