import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javafx.scene.control.Alert;
import javafx.stage.Stage;

public class User implements Serializable{
    private static final long serialVersionUID = -1389733824459161677L;

    public enum UserType {
        ADMIN, BORROWER, LIBRARIAN
    }

    private String UserName;
    private String Password;
    private UserType userType;
    public static List<User> users;
    
    public User()
    {  
    }
    public UserType getUserType() {
            return userType;
    }
    public User(String UserName, String Password,UserType usertype) {
        this.UserName = UserName;
        this.Password = Password;
        this .userType=usertype;
    }
    
    public void setUserName(String username) {
        this.UserName = username;
    }
    
    public void setPassword(String Password) {
        this.Password = Password;
    }

    public void setUserType(UserType userType) {
        this.userType = userType;
    }

    public String getUserName() {
        return UserName;
    }

    public String getPassword() {
        return Password;
    }
public User login(List<User> users, String userName, String password) {
        for (User user : users) {
            if (user.getUserName().equals(userName) && user.getPassword().equals(password)) {
                return user;
            }
        }
        return null;
    }
public boolean isUsernameExists(String username) {
    for (User user : User.users) {
        if (user.getUserName().equals(username)) {
            return true; 
        }
    }
    return false; 
}

public boolean signup(String username, String password) {
       User user;
    if (isUsernameExists(username)) {
        Dialogs.showAlert("Signup Failed!\nUsername ALREADY taken", Alert.AlertType.ERROR);
        return false;          
    } else {
            user = new Borrower(username, password);
           users.add(user);
            System.out.println("Signup successful!");
            
        }

        return true;
} 
}
    
        
    
    
    
    
   
