/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package testuser;



import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

public class Admin extends User {
    public static ArrayList<User> admins = new ArrayList<>();
    public Admin()
    {
        admins = readFromFile("adminInfo.txt");
    }

 
    public String getUserName() {
       return super.getUserName();
    }

    public void setUserName(String UserName) {
       super.setUserName(UserName); 
    }

    public String getPassword() {
        return super.getPassword();
    }

    public void setPassword(String Password) {
         super.setPassword (Password);
    }
    @Override
    public ArrayList<User>readFromFile(String fileName) {
         ArrayList<User> admins = new ArrayList<>();
        try {
            File file = new File(fileName);
            Scanner scanner = new Scanner(file);

            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                String[] parts = line.split(" ");
                if (parts.length == 2) {
                    User admin = new Admin();
                    admin.setUserName(parts[0]);
                    admin.setPassword(parts[1]);
                    admins.add(admin);
                } else {
                    System.out.println("Invalid format in the file: " + line);
                }
            }

            scanner.close();
        } catch (FileNotFoundException e) {
            System.out.println("File not found: " + fileName);
            System.out.println(e);
        }

        return admins;
    }
    @Override
    public void writeToFile(ArrayList<User>users,String fileName)
    {
         try (FileWriter writer = new FileWriter(fileName)) {
            for (User admin : users) {
                writer.write(admin.getUserName() + " " + admin.getPassword() + System.lineSeparator());
            }
        } catch (IOException e) {
            System.out.println(e);
        }
    }
   
    @Override
public void Login(){
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String pass = scanner.nextLine();
        for (User admin : admins) {
        if (admin.getUserName().equals(username)&& admin.getPassword().equals (pass)) {
          System.out.println("Login successful!");
            Main.menu();
        }       
    }
            System.out.println("Invalid username or password!");
}
   @Override
   public void SignUp()
   {
        Scanner scanner = new Scanner(System.in);
        User admin = new Admin();
        System.out.println("Enter Username: ");
        String Username = scanner.nextLine();
        admin.setUserName(Username);
        System.out.println("Enter Password: ");
        String Pass = scanner.nextLine();
        admin.setPassword(Pass);
        admins.add(admin);
        System.out.println("Admin added successfully!");
        Main.menu();
   }
    
    
    public void AddAdmin() {
       SignUp();
        Main.menu();
    }

    public static void addBorrower(Borrower borrower) {
       borrower.SignUp();
    }    
    public static void addLibrarian(Librarian librarian) { 
        librarian.SignUp();
    }
    
    public static void removeAdmin() {
    Scanner scanner = new Scanner(System.in);
    System.out.println("Enter the username of the admin to remove: ");
    String usernameToRemove = scanner.nextLine();

    for (User admin : admins) {
        if (admin.getUserName().equals(usernameToRemove)) {
            admins.remove(admin);
            System.out.println("Admin removed successfully!");
            return;
        }
    }

    System.out.println("Admin not found.");
     Main.menu();
}
    @Override
    public void editUser() {
     System.out.println("----------------------------------------------");

        Scanner input = new Scanner(System.in);
        System.out.println("Enter old Username: ");
        String oldUsername = input.next();
        System.out.println("Enter old Password: ");
        String oldpassword = input.next();
        System.out.println("Enter new Username: ");
        String newUserName = input.next();
        System.out.println("Enter new password: ");
        String newPassword = input.next();

        int index = -1;
        
        for (User adminObj:admins) {
    if (adminObj.getUserName().equals(oldUsername) && adminObj.getPassword().equals(oldpassword)) {
        index = admins.indexOf(adminObj);
        break;
    }
}
        if (index != -1) {
            User user = admins.get(index);
            user.setUserName(newUserName);
            user.setPassword(newPassword);
            System.out.println("User " + oldUsername + " has been edited.");

        } else {
            System.out.println("User " + oldUsername + " was not found.");
        }
        Main.menu();
    }
}





    

 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


